{
  "permissions": {
    "allow": [
      "Bash(for item in backend frontend worker docker docs scripts config data logs .github .gitignore .env.example Dockerfile docker-compose.yml README.md STRUCTURE.md plan.md tasks.md ai.md)",
      "Bash(do if [ -e \"$item\" ])",
      "Bash(then mv \"$item\" media-manager/)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(tree:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(docker-compose:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(git restore:*)",
      "Bash(docker ps:*)",
      "Bash(timeout 15 docker logs:*)"
      "Bash(dir)",
      "Bash(copy .env.example .env)",
      "Bash(docker-compose up -d --build)",
      "Bash(docker compose up -d --build)",
      "Bash(docker compose down)",
      "Bash(docker compose up -d --build frontend)",
      "Bash(npm run build)",
      "Bash(npm install)",
      "Bash(npm install recharts)",
      "Bash(npm install recharts --save)",
      "Bash(npm install react-grid-layout @types/react-grid-layout)",
      "Bash(docker compose up -d --build backend)",
      "Bash(docker compose logs backend --tail 20)",
      "Bash(docker compose logs backend --tail 50)",
      "Bash(docker compose logs backend --tail 10)",
      "Bash(docker compose logs:*)",
      "Bash(docker exec:*)",
      "Bash(docker network inspect:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(/dev/null)"
    ],
    "deny": [],
    "ask": []
  }
}
